@model IPagedList<NotesMarketplace.Models.Member>
@using PagedList
@using PagedList.Mvc
@{
    ViewBag.title = "Members";
    ViewBag.member = "active-link";
    Layout = "~/Views/Shared/Admin_layout.cshtml";
}

<section id="dashboard-second-section" class="admin-dashboard admin-top">
    <div class="container">
        <div class="row">
            <div class="col-md-3 col-sm-12 col-12 col-lg-5">
                <div class="dashboar-heading dashboard-top-title">
                    <h2>Members</h2>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-9 col-lg-7">
                <form>
                    <div class="row justify-content-end">
                        <input hidden name="sort" value="@Request.QueryString["sort"]" />
                        <div class="wrapper">
                            <img src="~/Admin_Content/images/Dashboard/search.jpg" class="searchimage doup">
                            <input name="search" value="@Request.QueryString["search"]" class="form-control search-bar InputEmail1" placeholder="Search">
                        </div>
                        <div class="marge-left">
                            <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="grid-table table-responsive-xl">
                    <table class="table">
                        <thead class="headr-wrap">
                            <tr style="cursor:default">
                                <th scope="col" class="align-middle text-center">SR NO.</th>
                                <th scope="col" class="align-middle dopointer"><a href="@Url.Action("Members", "Admin", new { sort = "fname", pageindex = Request.QueryString["pageindex"], search = Request.QueryString["search"] })">FIRST NAME</a></th>
                                <th scope="col" class="align-middle dopointer"><a href="@Url.Action("Members", "Admin", new { sort = "lname", pageindex = Request.QueryString["pageindex"], search = Request.QueryString["search"] })">LAST NAME</a></th>
                                <th scope="col" class="align-middle dopointer"><a href="@Url.Action("Members", "Admin", new { sort = "email", pageindex = Request.QueryString["pageindex"], search = Request.QueryString["search"] })">EMAIL</a></th>
                                <th scope="col" class="align-middle dopointer"><a href="@Url.Action("Members", "Admin", new { sort = "", pageindex = Request.QueryString["pageindex"], search = Request.QueryString["search"] })">JOINING DATE</a></th>
                                <th scope="col" class="align-middle text-center">UNDER REVIEW NOTES</th>
                                <th scope="col" class="align-middle text-center">PUBLISHED NOTES</th>
                                <th scope="col" class="align-middle text-center">DOWNLOADED NOTES</th>
                                <th scope="col" class="align-middle text-center">TOTAL EXPENSES</th>
                                <th scope="col" class="align-middle text-center">TOTAL EARNINGS</th>
                                <th scope="col" class="align-middle"></th>

                            </tr>
                        </thead>
                        <tbody class="headr-wrap">
                            @if (Model.Count() == 0)
                            {
                                <tr> <td colspan="11" class="align-middle"> Records not found </td></tr>
                            }
                            @{
                                int index = 0;
                                if (Request.QueryString["pageindex"] == null || Request.QueryString["pageindex"].Equals("1"))
                                {
                                    index = 0;
                                }
                                else
                                {
                                    index = (Convert.ToInt32(Request.QueryString["pageindex"]) - 1) * 5;
                                }
                            }
                            @for (int i = 0; i < Model.Count(); i++)
                            {
                                NotesMarketplace.Models.Member member = Model[i];
                                <tr style="cursor:default">
                                    <td class="align-middle text-center">@(index + i+1)</td>
                                    <td class="align-middle">@member.user.FirstName</td>
                                    <td class="align-middle">@member.user.LastName</td>
                                    <td class="align-middle">@member.user.EmailId</td>
                                    <td class="align-middle">@member.user.CreaatedDate.Value.ToString("g").Replace(" ", ", ")</td>
                                    <td class="align-middle text-center getpurple dopointer"><a href="@Url.Action("NoteUnderReview","Admin",new {sellerid=member.user.P_K_User})">@member.underreviewnotes</a></td>
                                    <td class="align-middle text-center getpurple dopointer"><a href="@Url.Action("PublishedNotes","Admin",new {sellerid=member.user.P_K_User})">@member.publshednotes</a></td>
                                    <td class="align-middle text-center getpurple dopointer"><a href="@Url.Action("DownloadedNotes","Admin",new {buyerid=member.user.P_K_User})">@member.downloadednotes</a></td>
                                    <td class="align-middle text-center getpurple dopointer"><a>$@member.totalexpensis</a></td>
                                    <td class="align-middle text-center"><a>$@member.totalearning</a></td>
                                    <td class="align-middle dopointer">
                                        <div class="dropdown">
                                            <a id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="fas fa-ellipsis-v dowhite"></i>
                                            </a>
                                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                <a class="dropdown-item" href="@Url.Action("MemberDatails","Admin",new {id=member.user.P_K_User})">View More Details</a>
                                                <a class="dropdown-item"  href="@Url.Action("DeactivateUser","Admin",new {id=member.user.P_K_User,view="Members"})">Deactivate</a>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

<section id="pagination">
@Html.PagedListPager(Model, pageindex => Url.Action("Members", "Admin", new { pageindex, search = Request.QueryString["search"], sort = Request.QueryString["sort"] }), new PagedList.Mvc.PagedListRenderOptions
{
ContainerDivClasses = null,
LiElementClasses = new string[] { "page-item1" },
UlElementClasses = new string[] { "pagination justify-content-center" },
LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
MaximumPageNumbersToDisplay = 5,
DisplayEllipsesWhenNotShowingAllPageNumbers = false,
DisplayLinkToFirstPage = PagedListDisplayMode.Never,
DisplayLinkToLastPage = PagedListDisplayMode.Never

})
</section>
